# Function to configure extracted files (desktop entry, icon)
configure_files() {
  local EXTRACTED_DIR="$HOME/squashfs-root"

  # Search for the desktop entry files in various possible locations
  DESKTOP_ENTRY_SRC=$(find "$EXTRACTED_DIR" -name "*.desktop" | head -n 1)

  # Search for icon files in various possible locations and formats
  ICON_FILE=$(find "$EXTRACTED_DIR" \
    \( -path "*/usr/share/icons/hicolor/*/apps/*" -o -path "*/icons/*" \) \
    \( -name "*.png" -o -name "*.svg" \) | head -n 1)

  # If no desktop entry was found, exit with an error
  if [ -z "$DESKTOP_ENTRY_SRC" ]; then
    echo "Error: Desktop entry not found."
    exit 1
  fi

  # If no icon was found, exit with an error
  if [ -z "$ICON_FILE" ]; then
    echo "Error: Icon file not found."
    exit 1
  fi

  # Initialize the icon path variable
  local ICON_PATH=""

  # Check for PNG or SVG icon and convert SVG if necessary
  if [[ "$ICON_FILE" == *.png ]]; then
    cp "$ICON_FILE" "$HOME_DIR/icon/$APP_NAME.png"
    ICON_PATH="$HOME_DIR/icon/$APP_NAME.png"
  elif [[ "$ICON_FILE" == *.svg ]]; then
    if command -v rsvg-convert > /dev/null 2>&1; then
      echo "Converting SVG icon to PNG..."
      rsvg-convert -o "$HOME_DIR/icon/$APP_NAME.png" "$ICON_FILE"
      ICON_PATH="$HOME_DIR/icon/$APP_NAME.png"
    else
      echo "Warning: rsvg-convert not found, keeping the original SVG icon."
      cp "$ICON_FILE" "$HOME_DIR/icon/$APP_NAME.svg"
      ICON_PATH="$HOME_DIR/icon/$APP_NAME.svg"
    fi
  else
    echo "Error: No valid icon format found."
    exit 1
  fi

  # Modify desktop entry to use bubblewrap
  BWRAP_CMD=$(get_bwrap_cmd)

  # Escape special characters in BWRAP_CMD and ICON_PATH
  BWRAP_CMD_ESCAPED=$(printf '%s\n' "$BWRAP_CMD" | sed 's/[\/&]/\\&/g')
  ICON_PATH_ESCAPED=$(printf '%s\n' "$ICON_PATH" | sed 's/[\/&]/\\&/g')

  # Update the desktop entry with the correct exec and icon paths
  sed -i "s@^Exec=.*@Exec=$BWRAP_CMD_ESCAPED@g" "$DESKTOP_ENTRY_SRC"
  sed -i "s@^Icon=.*@Icon=$ICON_PATH_ESCAPED@g" "$DESKTOP_ENTRY_SRC"

  # Copy the desktop entry to the appropriate directories
  cp "$DESKTOP_ENTRY_SRC" "$DESKTOP_ENTRY"
  cp "$DESKTOP_ENTRY" "$HOME/Desktop"

  # Cleanup the temporary extraction directory
  rm -rf "$EXTRACTED_DIR"
}